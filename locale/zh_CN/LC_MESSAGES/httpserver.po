# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2009-2021, The Tornado Authors
# This file is distributed under the same license as the Tornado package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Tornado release\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-08 09:51+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../httpserver.rst:2
msgid "``tornado.httpserver`` --- Non-blocking HTTP server"
msgstr ""

#: of tornado.httpserver:1 tornado.httpserver.HTTPServer:1
msgid "A non-blocking, single-threaded HTTP server."
msgstr ""

#: of tornado.httpserver:3
msgid ""
"Typical applications have little direct interaction with the `HTTPServer`"
" class except to start a server at the beginning of the process (and even"
" that is often done indirectly via `tornado.web.Application.listen`)."
msgstr ""

#: of tornado.httpserver:9
msgid ""
"The ``HTTPRequest`` class that used to live in this module has been moved"
" to `tornado.httputil.HTTPServerRequest`.  The old name remains as an "
"alias."
msgstr ""

#: ../../httpserver.rst:7
msgid "HTTP Server"
msgstr ""

#: of tornado.httpserver.HTTPServer:3
msgid ""
"A server is defined by a subclass of `.HTTPServerConnectionDelegate`, or,"
" for backwards compatibility, a callback that takes an "
"`.HTTPServerRequest` as an argument. The delegate is usually a "
"`tornado.web.Application`."
msgstr ""

#: of tornado.httpserver.HTTPServer:8
msgid ""
"`HTTPServer` supports keep-alive connections by default (automatically "
"for HTTP/1.1, or for HTTP/1.0 when the client requests ``Connection: "
"keep-alive``)."
msgstr ""

#: of tornado.httpserver.HTTPServer:12
msgid ""
"If ``xheaders`` is ``True``, we support the ``X-Real-Ip``/``X-Forwarded-"
"For`` and ``X-Scheme``/``X-Forwarded-Proto`` headers, which override the "
"remote IP and URI scheme/protocol for all requests.  These headers are "
"useful when running Tornado behind a reverse proxy or load balancer.  The"
" ``protocol`` argument can also be set to ``https`` if Tornado is run "
"behind an SSL-decoding proxy that does not set one of the supported "
"``xheaders``."
msgstr ""

#: of tornado.httpserver.HTTPServer:21
msgid ""
"By default, when parsing the ``X-Forwarded-For`` header, Tornado will "
"select the last (i.e., the closest) address on the list of hosts as the "
"remote host IP address.  To select the next server in the chain, a list "
"of trusted downstream hosts may be passed as the ``trusted_downstream`` "
"argument.  These hosts will be skipped when parsing the ``X-Forwarded-"
"For`` header."
msgstr ""

#: of tornado.httpserver.HTTPServer:28
msgid ""
"To make this server serve SSL traffic, send the ``ssl_options`` keyword "
"argument with an `ssl.SSLContext` object. For compatibility with older "
"versions of Python ``ssl_options`` may also be a dictionary of keyword "
"arguments for the `ssl.wrap_socket` method.::"
msgstr ""

#: of tornado.httpserver.HTTPServer:38
msgid ""
"`HTTPServer` initialization follows one of three patterns (the "
"initialization methods are defined on `tornado.tcpserver.TCPServer`):"
msgstr ""

#: of tornado.httpserver.HTTPServer:41
msgid "`~tornado.tcpserver.TCPServer.listen`: simple single-process::"
msgstr ""

#: of tornado.httpserver.HTTPServer:47
msgid ""
"In many cases, `tornado.web.Application.listen` can be used to avoid the "
"need to explicitly create the `HTTPServer`."
msgstr ""

#: of tornado.httpserver.HTTPServer:50
msgid ""
"`~tornado.tcpserver.TCPServer.bind`/`~tornado.tcpserver.TCPServer.start`:"
" simple multi-process::"
msgstr ""

#: of tornado.httpserver.HTTPServer:58
msgid ""
"When using this interface, an `.IOLoop` must *not* be passed to the "
"`HTTPServer` constructor.  `~.TCPServer.start` will always start the "
"server on the default singleton `.IOLoop`."
msgstr ""

#: of tornado.httpserver.HTTPServer:62
msgid "`~tornado.tcpserver.TCPServer.add_sockets`: advanced multi-process::"
msgstr ""

#: of tornado.httpserver.HTTPServer:70
msgid ""
"The `~.TCPServer.add_sockets` interface is more complicated, but it can "
"be used with `tornado.process.fork_processes` to give you more "
"flexibility in when the fork happens. `~.TCPServer.add_sockets` can also "
"be used in single-process servers if you want to create your listening "
"sockets in some way other than `tornado.netutil.bind_sockets`."
msgstr ""

#: of tornado.httpserver.HTTPServer:77
msgid ""
"Added ``decompress_request``, ``chunk_size``, ``max_header_size``, "
"``idle_connection_timeout``, ``body_timeout``, ``max_body_size`` "
"arguments.  Added support for `.HTTPServerConnectionDelegate` instances "
"as ``request_callback``."
msgstr ""

#: of tornado.httpserver.HTTPServer:83
msgid ""
"`.HTTPServerConnectionDelegate.start_request` is now called with two "
"arguments ``(server_conn, request_conn)`` (in accordance with the "
"documentation) instead of one ``(request_conn)``."
msgstr ""

#: of tornado.httpserver.HTTPServer:88
msgid "`HTTPServer` is now a subclass of `tornado.util.Configurable`."
msgstr ""

#: of tornado.httpserver.HTTPServer:91
msgid "Added the ``trusted_downstream`` argument."
msgstr ""

#: of tornado.httpserver.HTTPServer:94
msgid "The ``io_loop`` argument has been removed."
msgstr ""

#: of tornado.httpserver.HTTPServer.configurable_base:1
msgid "Returns the base class of a configurable hierarchy."
msgstr ""

#: of tornado.httpserver.HTTPServer.configurable_base:3
msgid ""
"This will normally return the class in which it is defined. (which is "
"*not* necessarily the same as the ``cls`` classmethod parameter)."
msgstr ""

#: of tornado.httpserver.HTTPServer.configurable_default:1
msgid "Returns the implementation class to be used if none is configured."
msgstr ""

#: of tornado.httpserver.HTTPServer.close_all_connections:1
msgid "Close all open connections and asynchronously wait for them to finish."
msgstr ""

#: of tornado.httpserver.HTTPServer.close_all_connections:3
msgid ""
"This method is used in combination with `~.TCPServer.stop` to support "
"clean shutdowns (especially for unittests). Typical usage would call "
"``stop()`` first to stop accepting new connections, then ``await "
"close_all_connections()`` to wait for existing connections to finish."
msgstr ""

#: of tornado.httpserver.HTTPServer.close_all_connections:9
msgid "This method does not currently close open websocket connections."
msgstr ""

#: of tornado.httpserver.HTTPServer.close_all_connections:11
msgid "Note that this method is a coroutine and must be called with ``await``."
msgstr ""

#: of tornado.httpserver.HTTPServer.handle_stream:1
msgid "Override to handle a new `.IOStream` from an incoming connection."
msgstr ""

#: of tornado.httpserver.HTTPServer.handle_stream:3
msgid ""
"This method may be a coroutine; if so any exceptions it raises "
"asynchronously will be logged. Accepting of incoming connections will not"
" be blocked by this coroutine."
msgstr ""

#: of tornado.httpserver.HTTPServer.handle_stream:7
msgid ""
"If this `TCPServer` is configured for SSL, ``handle_stream`` may be "
"called before the SSL handshake has completed. Use "
"`.SSLIOStream.wait_for_handshake` if you need to verify the client's "
"certificate or use NPN/ALPN."
msgstr ""

#: of tornado.httpserver.HTTPServer.handle_stream:12
msgid "Added the option for this method to be a coroutine."
msgstr ""

#: of tornado.httpserver.HTTPServer.start_request:1
msgid "This method is called by the server when a new request has started."
msgstr ""

#: of tornado.httpserver.HTTPServer.on_close
#: tornado.httpserver.HTTPServer.start_request
msgid "参数"
msgstr ""

#: of tornado.httpserver.HTTPServer.start_request:3
msgid ""
"is an opaque object representing the long-lived (e.g. tcp-level) "
"connection."
msgstr ""

#: of tornado.httpserver.HTTPServer.start_request:5
msgid "is a `.HTTPConnection` object for a single request/response exchange."
msgstr ""

#: of tornado.httpserver.HTTPServer.start_request:8
msgid "This method should return a `.HTTPMessageDelegate`."
msgstr ""

#: of tornado.httpserver.HTTPServer.on_close:1
msgid "This method is called when a connection has been closed."
msgstr ""

#: of tornado.httpserver.HTTPServer.on_close:3
msgid ""
"is a server connection that has previously been passed to "
"``start_request``."
msgstr ""

